{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","allTabs","selectedTabId","onChange","className","map","item","type","classNames","id","onClick","title","active","content","tabs","App","state","selectedTab","onTabSelected","newTab","setState","this","curentEl","find","el","undefined","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4NAeaA,EAAwB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAC9D,OACE,qCACE,qBACEC,UAAU,cADZ,SAGGH,EAAQI,KAAI,SAACC,GAAD,OACX,wBACEC,KAAK,SACLH,UAAWI,IACT,YACA,CAAE,oBAAqBN,IAAkBI,EAAKG,KAGhDC,QAAS,WACPP,EAASG,EAAKK,QARlB,SAWGL,EAAKK,OALDL,EAAKK,YAShB,qBACEP,UAAU,kBADZ,SAGGH,EAAQI,KAAI,SAACC,GAAD,OACX,mBAEEF,UAAWI,IACT,2BACA,CAAEI,OAAQV,IAAkBI,EAAKG,KAJrC,SAOGH,EAAKO,SANDP,EAAKG,aCrChBK,G,MAAc,CAClB,CAAEL,GAAI,QAASE,MAAO,QAASE,QAAS,eACxC,CAAEJ,GAAI,QAASE,MAAO,QAASE,QAAS,eACxC,CAAEJ,GAAI,QAASE,MAAO,QAASE,QAAS,iBAGpCE,E,4MACJC,MAAQ,CACNC,YAAa,QACbhB,QAAQ,GAAD,OAAMa,I,EAGfI,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZH,YAAaE,K,4CAIjB,WACE,MAAiCE,KAAKL,MAA9BC,EAAR,EAAQA,YAAahB,EAArB,EAAqBA,QACfqB,EAAWrB,EAAQsB,MAAK,SAAAC,GAAE,OAAIA,EAAGb,QAAUM,KAEjD,OACE,sBAAKb,UAAU,MAAf,UACE,qDAEGa,KAEH,cAAC,EAAD,CACEhB,QAASA,EACTC,cAAgBoB,EAAYA,EAASb,QAAKgB,EAC1CtB,SAAUkB,KAAKH,uB,GAzBPQ,IAAMC,WA+BTZ,ICvCfa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6aeb6fd8.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\ntype Props = {\n  allTabs: Tab[],\n  selectedTabId: string | undefined,\n  onChange: any,\n};\n\nexport const Tabs: React.FC<Props> = ({ allTabs, selectedTabId, onChange }) => {\n  return (\n    <>\n      <div\n        className=\"tabs-titles\"\n      >\n        {allTabs.map((item: Tab) => (\n          <button\n            type=\"button\"\n            className={classNames(\n              'tab-title',\n              { 'tab-title__active': selectedTabId === item.id },\n            )}\n            key={item.title}\n            onClick={() => {\n              onChange(item.title);\n            }}\n          >\n            {item.title}\n          </button>\n        ))}\n      </div>\n      <div\n        className=\"tabs-components\"\n      >\n        {allTabs.map((item: Tab) => (\n          <p\n            key={item.id}\n            className={classNames(\n              'tabs-components__content',\n              { active: selectedTabId === item.id },\n            )}\n          >\n            {item.content}\n          </p>\n        ))}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Tabs } from './components/Tabs/Tabs';\n\nimport './App.scss';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nclass App extends React.Component {\n  state = {\n    selectedTab: 'Tab 1',\n    allTabs: [...tabs],\n  };\n\n  onTabSelected = (newTab: string) => {\n    this.setState({\n      selectedTab: newTab,\n    });\n  };\n\n  render() {\n    const { selectedTab, allTabs } = this.state;\n    const curentEl = allTabs.find(el => el.title === selectedTab);\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected tab is&nbsp;\n          {selectedTab}\n        </h1>\n        <Tabs\n          allTabs={allTabs}\n          selectedTabId={(curentEl) ? curentEl.id : undefined}\n          onChange={this.onTabSelected}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}